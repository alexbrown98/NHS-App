# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.0.0
jobs:
  build-spring:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo/spring_application

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:

      - checkout:
          path: ~/repo

      - restore_cache:
          key: circleci-demo-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline
      
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-{{ checksum "pom.xml" }}
      
      - run: mvn package

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: ~/repo
          # Must be relative path from root
          paths:
            - .circleci
            - spring_application
      
      - store_test_results:
          path: target/surefire-reports
      
      - store_artifacts:
          path: target/demo-0.0.1-SNAPSHOT.jar

  deploy-spring:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    #branches:  
    #  only:  
    #    - continuous-deployment  
    working_directory: ~/repo

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/repo

      - add_ssh_keys:
          fingerprints:
            - "56:a5:a9:92:31:e5:a6:0a:0c:f1:d7:cd:96:c4:84:e2"
      - run: bash .circleci/deploy.sh

  build-vue:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.16.1

    working_directory: ~/repo/vue_frontend

    steps: # a collection of executable commands
      - checkout: # special step to check out source code to working directory
          path: ~/repo
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: echo "VUE_APP_BASE_URL=${EC2IP}" > .env.production
      - run:
          name: npm-build
          command: npm run build


      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: ~/repo
          # Must be relative path from root
          paths:
            - vue_frontend
            - .circleci
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

  deploy-vue:
    docker:
      - image: 'cimg/python:3.6'
    working_directory: ~/repo

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - aws-cli/install
      - run: aws s3 sync /tmp/workspace/vue_frontend/dist 's3://medical-teaching-frontend/dist' #Need to refresh aws credentials every time because of Educate Account

workflows:
    version: 2.1
    build-and-deploy-spring:
     jobs:
       - build-spring:
           filters: # Added this filter to spare some credit
             branches:
               only: continuous-deployment # only deploy on the deployment branch
       - deploy-spring:
           requires:
             - build-spring # only deploy once build job has completed
           filters:
             branches:
               only: continuous-deployment # only deploy on the deployment branch
    build-and-deploy-vue:
      jobs:
       - build-vue:
           filters: # Added this filter to spare some credit
             branches:
               only: continuous-deployment # only deploy on the deployment branch
       - deploy-vue:
           requires:
             - build-vue # only deploy once build job has completed
           filters:
             branches:
               only: continuous-deployment # only deploy on the deployment branch

        
